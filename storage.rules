rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isValidImage() {
      return request.resource.contentType.matches('image/.*')
        && request.resource.size <= 5 * 1024 * 1024; // 5MB max
    }

    // Profile pictures
    match /profile-pictures/{userId} {
      allow read: if true;  // Anyone can view profile pictures
      allow write: if isOwner(userId) && isValidImage();
    }

    // Book covers
    match /book-covers/{bookId} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidImage();
    }

    // Post images
    match /post-images/{postId} {
      allow read: if true;
      allow write: if isAuthenticated() && isValidImage();
    }

    // Default deny
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
} 